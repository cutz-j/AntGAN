#### dataset params ####
# resolution
root_dir: /home/data/voxceleb1
# Image shape, needed for staked .png format.
frame_shape: [256, 256, 3]
# In case of TaiChi single video can be splitted in many chunks, or the maybe several videos for single person.
# In this case epoch can be a pass over different videos (if id_sampling=True) or over different chunks (if id_sampling=False)
# If the name of the video '12335#adsbf.mp4' the id is assumed to be 12335
id_sampling: True
# Augmentation parameters see augmentation.py for all posible augmentations
img_size: 256
num_repeats: 20

#### augmentation params ####
horizontal_flip: True
time_flip: True
brightness: 0.1
contrast: 0.1
saturation: 0.1
hue: 0.1

#### model params ####
# latent vector dimension
latent_dim: 16
# hidden dimension of mapping network
hidden_dim: 512
# sytle code dimension
style_dim: 64
num_class: 1

#### objective params ####
# R1 regualrization
lambda_reg: 1
# cyclic consistency loss
lambda_cyc: 1
# style reconstruction loss
lambda_sty: 1
# diversity sensitive loss
lambda_ds: 1
# iterations to optimize diversity sensitive loss
ds_iter: 100000
# high-pass filtering
w_hpf: 0
# wgan-gp
lambda_gp: 10
drift: 0.001
lambda_wgan: 100

#### train params ####
randcrop_prob: 0.5
resume_iter: 165
batch_size: 16
val_batch_size: 32
lr: 1e-4
beta1: 0.0
beta2: 0.99
weight_decay: 1e-4
epochs: 300

#### misc params ####
# solver mode
mode: 'train'
# dataloader workers
num_workers: 8
# seed
seed: 777

#### test params ####
# metric save directory
eval_dir: 'logs/eval'
# result img save directory
result_dir: 'logs/results'
sample_dir: 'logs/samples'
checkpoint_dir: 'logs/checkpoints_motion'
K: 8


#### step params ####
print_every: 10
sample_every: 5
save_every: 5
eval_every: 5

#### Transformer params ####
max_conv_dim: 512 
n_layers: 6
n_heads: 8 
d_k: 64 
dim: 512 
d_ff: 2048 
dropout_prob: 0.2